{"remainingRequest":"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ebenezerawotoro/Desktop/mpvis_app/src/pages/components/Books.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/src/pages/components/Books.vue","mtime":1689944350311},{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\nimport {\n  mapState,\n  mapActions\n} from 'vuex'\n\nexport default {\n  name: 'books',\n  methods: {\n    ...mapActions(['setBooks', 'clearBooks'])\n    // fetchResource () {\n    //   $backend.fetchResource()\n    //     .then(responseData => {\n    //       this.resources.push(responseData)\n    //     }).catch(error => {\n    //       this.error = error.message\n    //     })\n    // },\n    // fetchSecureResource () {\n    //   $backend.fetchSecureResource()\n    //     .then(responseData => {\n    //       this.resources.push(responseData)\n    //     }).catch(error => {\n    //       this.error = error.message\n    //     })\n    // },\n  },\n  computed: {\n    ...mapState(['books', 'error'])\n  }\n}\n",{"version":3,"sources":["Books.vue"],"names":[],"mappings":";AA8CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Books.vue","sourceRoot":"src/pages/components","sourcesContent":["<template>\n  <v-container grid-list-md text-xs-center class=\"books\">\n    <v-layout row wrap>\n      <v-flex sm8 offset-sm2>\n        <v-chip color=\"primary\" text-color=\"white\">\n          <v-avatar class=\"teal\">C</v-avatar>\n          Books\n        </v-chip>\n        <!-- <v-card> -->\n\n          <v-toolbar color=\"cyan\" dark relative scroll-target=\"#scrolling-techniques\">\n            <v-toolbar-title>Books ({{books.length}} are shown)</v-toolbar-title>\n            <v-spacer></v-spacer>\n\n            <v-btn icon @click.native=\"setBooks\">\n              <v-icon>add_circle</v-icon>\n            </v-btn>\n\n            <v-btn icon @click.native=\"clearBooks\">\n              <v-icon>remove_circle</v-icon>\n            </v-btn>\n          </v-toolbar>\n          <v-divider></v-divider>\n\n          <div id=\"scrolling-techniques\" class=\"scroll-y\" style=\"max-height: 400px;\">\n            <v-list two-line>\n              <template v-for=\"(book, index) in books\">\n                <v-divider :key=\"index\"></v-divider>\n                <v-list-tile :key=\"book.index\">\n                  <v-list-tile-content>\n                    <v-list-tile-title v-html=\"book.title\"></v-list-tile-title>\n                    <v-list-tile-sub-title v-html=\"book.author\"></v-list-tile-sub-title>\n                  </v-list-tile-content>\n                </v-list-tile>\n              </template>\n            </v-list>\n          </div>\n\n          <p>{{error}}</p>\n        <!-- </v-card> -->\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport {\n  mapState,\n  mapActions\n} from 'vuex'\n\nexport default {\n  name: 'books',\n  methods: {\n    ...mapActions(['setBooks', 'clearBooks'])\n    // fetchResource () {\n    //   $backend.fetchResource()\n    //     .then(responseData => {\n    //       this.resources.push(responseData)\n    //     }).catch(error => {\n    //       this.error = error.message\n    //     })\n    // },\n    // fetchSecureResource () {\n    //   $backend.fetchSecureResource()\n    //     .then(responseData => {\n    //       this.resources.push(responseData)\n    //     }).catch(error => {\n    //       this.error = error.message\n    //     })\n    // },\n  },\n  computed: {\n    ...mapState(['books', 'error'])\n  }\n}\n</script>\n"]}]}