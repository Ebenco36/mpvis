{"ast":null,"code":"import { isBoolean, isObject } from 'vega-util';\nimport { COLOR, COLUMN, FILL, FILLOPACITY, OPACITY, ROW, SHAPE, SIZE, STROKE, STROKEDASH, STROKEOPACITY, STROKEWIDTH } from './channel';\nimport { normalizeBin } from './channeldef';\nimport { entries, keys, varName } from './util';\n/**\n * Create a key for the bin configuration. Not for prebinned bin.\n */\nexport function binToString(bin) {\n  if (isBoolean(bin)) {\n    bin = normalizeBin(bin, undefined);\n  }\n  return 'bin' + keys(bin).map(p => isParameterExtent(bin[p]) ? varName(`_${p}_${entries(bin[p])}`) : varName(`_${p}_${bin[p]}`)).join('');\n}\n/**\n * Vega-Lite should bin the data.\n */\nexport function isBinning(bin) {\n  return bin === true || isBinParams(bin) && !bin.binned;\n}\n/**\n * The data is already binned and so Vega-Lite should not bin it again.\n */\nexport function isBinned(bin) {\n  return bin === 'binned' || isBinParams(bin) && bin.binned === true;\n}\nexport function isBinParams(bin) {\n  return isObject(bin);\n}\nexport function isParameterExtent(extent) {\n  return extent?.['param'];\n}\nexport function autoMaxBins(channel) {\n  switch (channel) {\n    case ROW:\n    case COLUMN:\n    case SIZE:\n    case COLOR:\n    case FILL:\n    case STROKE:\n    case STROKEWIDTH:\n    case OPACITY:\n    case FILLOPACITY:\n    case STROKEOPACITY:\n    // Facets and Size shouldn't have too many bins\n    // We choose 6 like shape to simplify the rule [falls through]\n    case SHAPE:\n      return 6;\n    // Vega's \"shape\" has 6 distinct values\n    case STROKEDASH:\n      return 4;\n    // We only provide 5 different stroke dash values (but 4 is more effective)\n    default:\n      return 10;\n  }\n}","map":{"version":3,"names":["isBoolean","isObject","COLOR","COLUMN","FILL","FILLOPACITY","OPACITY","ROW","SHAPE","SIZE","STROKE","STROKEDASH","STROKEOPACITY","STROKEWIDTH","normalizeBin","entries","keys","varName","binToString","bin","undefined","map","p","isParameterExtent","join","isBinning","isBinParams","binned","isBinned","extent","autoMaxBins","channel"],"sources":["../../src/bin.ts"],"sourcesContent":[null],"mappings":"AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,WAAW;AAC7C,SACEC,KAAK,EACLC,MAAM,EAENC,IAAI,EACJC,WAAW,EACXC,OAAO,EACPC,GAAG,EACHC,KAAK,EACLC,IAAI,EACJC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,WAAW,QACN,WAAW;AAClB,SAAQC,YAAY,QAAO,cAAc;AAEzC,SAAQC,OAAO,EAAEC,IAAI,EAAEC,OAAO,QAAO,QAAQ;AA0E7C;;;AAGA,OAAM,SAAUC,WAAWA,CAACC,GAAqB;EAC/C,IAAInB,SAAS,CAACmB,GAAG,CAAC,EAAE;IAClBA,GAAG,GAAGL,YAAY,CAACK,GAAG,EAAEC,SAAS,CAAC;;EAEpC,OACE,KAAK,GACLJ,IAAI,CAACG,GAAG,CAAC,CACNE,GAAG,CAACC,CAAC,IAAKC,iBAAiB,CAACJ,GAAG,CAACG,CAAC,CAAC,CAAC,GAAGL,OAAO,CAAC,IAAIK,CAAC,IAAIP,OAAO,CAACI,GAAG,CAACG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAGL,OAAO,CAAC,IAAIK,CAAC,IAAIH,GAAG,CAACG,CAAC,CAAC,EAAE,CAAE,CAAC,CACxGE,IAAI,CAAC,EAAE,CAAC;AAEf;AAEA;;;AAGA,OAAM,SAAUC,SAASA,CAACN,GAAmC;EAC3D,OAAOA,GAAG,KAAK,IAAI,IAAKO,WAAW,CAACP,GAAG,CAAC,IAAI,CAACA,GAAG,CAACQ,MAAO;AAC1D;AAEA;;;AAGA,OAAM,SAAUC,QAAQA,CAACT,GAAmC;EAC1D,OAAOA,GAAG,KAAK,QAAQ,IAAKO,WAAW,CAACP,GAAG,CAAC,IAAIA,GAAG,CAACQ,MAAM,KAAK,IAAK;AACtE;AAEA,OAAM,SAAUD,WAAWA,CAACP,GAAmC;EAC7D,OAAOlB,QAAQ,CAACkB,GAAG,CAAC;AACtB;AAEA,OAAM,SAAUI,iBAAiBA,CAACM,MAAiB;EACjD,OAAOA,MAAM,GAAG,OAAO,CAAC;AAC1B;AAEA,OAAM,SAAUC,WAAWA,CAACC,OAAyB;EACnD,QAAQA,OAAO;IACb,KAAKxB,GAAG;IACR,KAAKJ,MAAM;IACX,KAAKM,IAAI;IACT,KAAKP,KAAK;IACV,KAAKE,IAAI;IACT,KAAKM,MAAM;IACX,KAAKG,WAAW;IAChB,KAAKP,OAAO;IACZ,KAAKD,WAAW;IAChB,KAAKO,aAAa;IAClB;IACA;IACA,KAAKJ,KAAK;MACR,OAAO,CAAC;IAAE;IACZ,KAAKG,UAAU;MACb,OAAO,CAAC;IAAE;IACZ;MACE,OAAO,EAAE;;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}