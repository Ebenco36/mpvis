{"ast":null,"code":"import { getPositionScaleChannel, getSizeChannel, POSITION_SCALE_CHANNELS } from '../../channel';\nimport { getViewConfigContinuousSize, getViewConfigDiscreteSize } from '../../config';\nimport { hasDiscreteDomain } from '../../scale';\nimport { isStep } from '../../spec/base';\nimport { isVgRangeStep } from '../../vega.schema';\nimport { defaultScaleResolve } from '../resolve';\nimport { mergeValuesWithExplicit } from '../split';\nimport { getSizeTypeFromLayoutSizeType } from './component';\nexport function parseLayerLayoutSize(model) {\n  parseChildrenLayoutSize(model);\n  parseNonUnitLayoutSizeForChannel(model, 'width');\n  parseNonUnitLayoutSizeForChannel(model, 'height');\n}\nexport function parseConcatLayoutSize(model) {\n  parseChildrenLayoutSize(model);\n  // for columns === 1 (vconcat), we can completely merge width. Otherwise, we can treat merged width as childWidth.\n  const widthType = model.layout.columns === 1 ? 'width' : 'childWidth';\n  // for columns === undefined (hconcat), we can completely merge height. Otherwise, we can treat merged height as childHeight.\n  const heightType = model.layout.columns === undefined ? 'height' : 'childHeight';\n  parseNonUnitLayoutSizeForChannel(model, widthType);\n  parseNonUnitLayoutSizeForChannel(model, heightType);\n}\nexport function parseChildrenLayoutSize(model) {\n  for (const child of model.children) {\n    child.parseLayoutSize();\n  }\n}\n/**\n * Merge child layout size (width or height).\n */\nfunction parseNonUnitLayoutSizeForChannel(model, layoutSizeType) {\n  /*\n   * For concat, the parent width or height might not be the same as the children's shared height.\n   * For example, hconcat's subviews may share width, but the shared width is not the hconcat view's width.\n   *\n   * layoutSizeType represents the output of the view (could be childWidth/childHeight/width/height)\n   * while the sizeType represents the properties of the child.\n   */\n  const sizeType = getSizeTypeFromLayoutSizeType(layoutSizeType);\n  const channel = getPositionScaleChannel(sizeType);\n  const resolve = model.component.resolve;\n  const layoutSizeCmpt = model.component.layoutSize;\n  let mergedSize;\n  // Try to merge layout size\n  for (const child of model.children) {\n    const childSize = child.component.layoutSize.getWithExplicit(sizeType);\n    const scaleResolve = resolve.scale[channel] ?? defaultScaleResolve(channel, model);\n    if (scaleResolve === 'independent' && childSize.value === 'step') {\n      // Do not merge independent scales with range-step as their size depends\n      // on the scale domains, which can be different between scales.\n      mergedSize = undefined;\n      break;\n    }\n    if (mergedSize) {\n      if (scaleResolve === 'independent' && mergedSize.value !== childSize.value) {\n        // For independent scale, only merge if all the sizes are the same.\n        // If the values are different, abandon the merge!\n        mergedSize = undefined;\n        break;\n      }\n      mergedSize = mergeValuesWithExplicit(mergedSize, childSize, sizeType, '');\n    } else {\n      mergedSize = childSize;\n    }\n  }\n  if (mergedSize) {\n    // If merged, rename size and set size of all children.\n    for (const child of model.children) {\n      model.renameSignal(child.getName(sizeType), model.getName(layoutSizeType));\n      child.component.layoutSize.set(sizeType, 'merged', false);\n    }\n    layoutSizeCmpt.setWithExplicit(layoutSizeType, mergedSize);\n  } else {\n    layoutSizeCmpt.setWithExplicit(layoutSizeType, {\n      explicit: false,\n      value: undefined\n    });\n  }\n}\nexport function parseUnitLayoutSize(model) {\n  const {\n    size,\n    component\n  } = model;\n  for (const channel of POSITION_SCALE_CHANNELS) {\n    const sizeType = getSizeChannel(channel);\n    if (size[sizeType]) {\n      const specifiedSize = size[sizeType];\n      component.layoutSize.set(sizeType, isStep(specifiedSize) ? 'step' : specifiedSize, true);\n    } else {\n      const defaultSize = defaultUnitSize(model, sizeType);\n      component.layoutSize.set(sizeType, defaultSize, false);\n    }\n  }\n}\nfunction defaultUnitSize(model, sizeType) {\n  const channel = sizeType === 'width' ? 'x' : 'y';\n  const config = model.config;\n  const scaleComponent = model.getScaleComponent(channel);\n  if (scaleComponent) {\n    const scaleType = scaleComponent.get('type');\n    const range = scaleComponent.get('range');\n    if (hasDiscreteDomain(scaleType)) {\n      const size = getViewConfigDiscreteSize(config.view, sizeType);\n      if (isVgRangeStep(range) || isStep(size)) {\n        // For discrete domain with range.step, use dynamic width/height\n        return 'step';\n      } else {\n        return size;\n      }\n    } else {\n      return getViewConfigContinuousSize(config.view, sizeType);\n    }\n  } else if (model.hasProjection || model.mark === 'arc') {\n    // arc should use continuous size by default otherwise the pie is extremely small\n    return getViewConfigContinuousSize(config.view, sizeType);\n  } else {\n    const size = getViewConfigDiscreteSize(config.view, sizeType);\n    return isStep(size) ? size.step : size;\n  }\n}","map":{"version":3,"names":["getPositionScaleChannel","getSizeChannel","POSITION_SCALE_CHANNELS","getViewConfigContinuousSize","getViewConfigDiscreteSize","hasDiscreteDomain","isStep","isVgRangeStep","defaultScaleResolve","mergeValuesWithExplicit","getSizeTypeFromLayoutSizeType","parseLayerLayoutSize","model","parseChildrenLayoutSize","parseNonUnitLayoutSizeForChannel","parseConcatLayoutSize","widthType","layout","columns","heightType","undefined","child","children","parseLayoutSize","layoutSizeType","sizeType","channel","resolve","component","layoutSizeCmpt","layoutSize","mergedSize","childSize","getWithExplicit","scaleResolve","scale","value","renameSignal","getName","set","setWithExplicit","explicit","parseUnitLayoutSize","size","specifiedSize","defaultSize","defaultUnitSize","config","scaleComponent","getScaleComponent","scaleType","get","range","view","hasProjection","mark","step"],"sources":["../../../../src/compile/layoutsize/parse.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}