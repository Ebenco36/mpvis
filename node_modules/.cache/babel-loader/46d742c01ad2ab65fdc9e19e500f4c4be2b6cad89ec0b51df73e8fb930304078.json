{"ast":null,"code":"import { hasOwnProperty, isArray } from 'vega-util';\nimport { hasConditionalFieldOrDatumDef, isConditionalDef, isFieldDef, isFieldOrDatumDef, isRepeatRef, isSortableFieldDef } from '../channeldef';\nimport * as log from '../log';\nimport { isSortField } from '../sort';\nimport { isFacetMapping } from '../spec/facet';\nexport function replaceRepeaterInFacet(facet, repeater) {\n  if (!repeater) {\n    return facet;\n  }\n  if (isFacetMapping(facet)) {\n    return replaceRepeaterInMapping(facet, repeater);\n  }\n  return replaceRepeaterInFieldDef(facet, repeater);\n}\nexport function replaceRepeaterInEncoding(encoding, repeater) {\n  if (!repeater) {\n    return encoding;\n  }\n  return replaceRepeaterInMapping(encoding, repeater);\n}\n/**\n * Replaces repeated value and returns if the repeated value is valid.\n */\nfunction replaceRepeatInProp(prop, o, repeater) {\n  const val = o[prop];\n  if (isRepeatRef(val)) {\n    if (val.repeat in repeater) {\n      return {\n        ...o,\n        [prop]: repeater[val.repeat]\n      };\n    } else {\n      log.warn(log.message.noSuchRepeatedValue(val.repeat));\n      return undefined;\n    }\n  }\n  return o;\n}\n/**\n * Replace repeater values in a field def with the concrete field name.\n */\nfunction replaceRepeaterInFieldDef(fieldDef, repeater) {\n  fieldDef = replaceRepeatInProp('field', fieldDef, repeater);\n  if (fieldDef === undefined) {\n    // the field def should be ignored\n    return undefined;\n  } else if (fieldDef === null) {\n    return null;\n  }\n  if (isSortableFieldDef(fieldDef) && isSortField(fieldDef.sort)) {\n    const sort = replaceRepeatInProp('field', fieldDef.sort, repeater);\n    fieldDef = {\n      ...fieldDef,\n      ...(sort ? {\n        sort\n      } : {})\n    };\n  }\n  return fieldDef;\n}\nfunction replaceRepeaterInFieldOrDatumDef(def, repeater) {\n  if (isFieldDef(def)) {\n    return replaceRepeaterInFieldDef(def, repeater);\n  } else {\n    const datumDef = replaceRepeatInProp('datum', def, repeater);\n    if (datumDef !== def && !datumDef.type) {\n      datumDef.type = 'nominal';\n    }\n    return datumDef;\n  }\n}\nfunction replaceRepeaterInChannelDef(channelDef, repeater) {\n  if (isFieldOrDatumDef(channelDef)) {\n    const fd = replaceRepeaterInFieldOrDatumDef(channelDef, repeater);\n    if (fd) {\n      return fd;\n    } else if (isConditionalDef(channelDef)) {\n      return {\n        condition: channelDef.condition\n      };\n    }\n  } else {\n    if (hasConditionalFieldOrDatumDef(channelDef)) {\n      const fd = replaceRepeaterInFieldOrDatumDef(channelDef.condition, repeater);\n      if (fd) {\n        return {\n          ...channelDef,\n          condition: fd\n        };\n      } else {\n        const {\n          condition,\n          ...channelDefWithoutCondition\n        } = channelDef;\n        return channelDefWithoutCondition;\n      }\n    }\n    return channelDef;\n  }\n  return undefined;\n}\nfunction replaceRepeaterInMapping(mapping, repeater) {\n  const out = {};\n  for (const channel in mapping) {\n    if (hasOwnProperty(mapping, channel)) {\n      const channelDef = mapping[channel];\n      if (isArray(channelDef)) {\n        // array cannot have condition\n        out[channel] = channelDef // somehow we need to cast it here\n        .map(cd => replaceRepeaterInChannelDef(cd, repeater)).filter(cd => cd);\n      } else {\n        const cd = replaceRepeaterInChannelDef(channelDef, repeater);\n        if (cd !== undefined) {\n          out[channel] = cd;\n        }\n      }\n    }\n  }\n  return out;\n}","map":{"version":3,"names":["hasOwnProperty","isArray","hasConditionalFieldOrDatumDef","isConditionalDef","isFieldDef","isFieldOrDatumDef","isRepeatRef","isSortableFieldDef","log","isSortField","isFacetMapping","replaceRepeaterInFacet","facet","repeater","replaceRepeaterInMapping","replaceRepeaterInFieldDef","replaceRepeaterInEncoding","encoding","replaceRepeatInProp","prop","o","val","repeat","warn","message","noSuchRepeatedValue","undefined","fieldDef","sort","replaceRepeaterInFieldOrDatumDef","def","datumDef","type","replaceRepeaterInChannelDef","channelDef","fd","condition","channelDefWithoutCondition","mapping","out","channel","map","cd","filter"],"sources":["../../../src/normalize/repeater.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}