{"remainingRequest":"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/thread-loader/dist/cjs.js!/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/babel-loader/lib/index.js!/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ebenezerawotoro/Desktop/mpvis_app/src/pages/components/VegaCars.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/src/pages/components/VegaCars.vue","mtime":1689944350311},{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/package.json","mtime":1689944306787},{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/ebenezerawotoro/Desktop/mpvis_app/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { mapState, mapActions } from 'vuex';\nimport vegaEmbed from 'vega-embed';\nexport default {\n  name: 'vega_cars',\n  methods: _objectSpread({}, mapActions(['setCars', 'clearCars'])),\n  computed: _objectSpread({}, mapState(['cars'])),\n  watch: {\n    cars: function cars(spec) {\n      console.log('$store.state.cars changed value');\n      if (spec) {\n        vegaEmbed('#vega-display', spec, {\n          actions: false\n        });\n      }\n    }\n  }\n};",{"version":3,"names":["mapState","mapActions","vegaEmbed","name","methods","_objectSpread","computed","watch","cars","spec","console","log","actions"],"sources":["src/pages/components/VegaCars.vue"],"sourcesContent":["<template>\n  <v-container grid-list-md text-xs-center class=\"books\">\n    <v-layout row wrap>\n      <v-flex sm8 offset-sm2>\n        <v-chip color=\"primary\" text-color=\"white\">\n          <v-avatar class=\"teal\">C</v-avatar>\n          VegaCars\n        </v-chip><br>\n\n        <v-toolbar color=\"cyan\" dark relative scroll-target=\"#scrolling-techniques\">\n          <v-toolbar-title>Cars</v-toolbar-title>\n          <v-spacer></v-spacer>\n\n          <v-btn icon @click.native=\"setCars\">\n            <v-icon>add_circle</v-icon>\n          </v-btn>\n\n          <v-btn icon @click.native=\"clearCars\">\n            <v-icon>remove_circle</v-icon>\n          </v-btn>\n        </v-toolbar>\n        <v-divider></v-divider>\n\n        <div v-show=\"cars\" id=\"vega-display\"></div>\n\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport {\n  mapState,\n  mapActions\n} from 'vuex'\nimport vegaEmbed from 'vega-embed'\n\nexport default {\n  name: 'vega_cars',\n  methods: {\n    ...mapActions(['setCars', 'clearCars'])\n  },\n  computed: {\n    ...mapState(['cars'])\n  },\n  watch: {\n    cars: (spec) => {\n      console.log('$store.state.cars changed value')\n      if (spec) {\n        vegaEmbed('#vega-display', spec, {\n          actions: false\n        })\n      }\n    }\n  }\n}\n</script>\n"],"mappings":";;;;;;AA+BA,SACAA,QAAA,EACAC,UAAA,QACA;AACA,OAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,OAAA,EAAAC,aAAA,KACAJ,UAAA,2BACA;EACAK,QAAA,EAAAD,aAAA,KACAL,QAAA,WACA;EACAO,KAAA;IACAC,IAAA,WAAAA,KAAAC,IAAA;MACAC,OAAA,CAAAC,GAAA;MACA,IAAAF,IAAA;QACAP,SAAA,kBAAAO,IAAA;UACAG,OAAA;QACA;MACA;IACA;EACA;AACA"}]}