{"ast":null,"code":"import { array } from 'vega-util';\nimport { isConditionalDef, isConditionalParameter } from '../../../channeldef';\nimport { expression } from '../../predicate';\nimport { parseSelectionPredicate } from '../../selection/parse';\n/**\n * Return a mixin that includes a Vega production rule for a Vega-Lite conditional channel definition\n * or a simple mixin if channel def has no condition.\n */\nexport function wrapCondition(model, channelDef, vgChannel, refFn) {\n  const condition = isConditionalDef(channelDef) && channelDef.condition;\n  const valueRef = refFn(channelDef);\n  if (condition) {\n    const conditions = array(condition);\n    const vgConditions = conditions.map(c => {\n      const conditionValueRef = refFn(c);\n      if (isConditionalParameter(c)) {\n        const {\n          param,\n          empty\n        } = c;\n        const test = parseSelectionPredicate(model, {\n          param,\n          empty\n        });\n        return {\n          test,\n          ...conditionValueRef\n        };\n      } else {\n        const test = expression(model, c.test); // FIXME: remove casting once TS is no longer dumb about it\n        return {\n          test,\n          ...conditionValueRef\n        };\n      }\n    });\n    return {\n      [vgChannel]: [...vgConditions, ...(valueRef !== undefined ? [valueRef] : [])]\n    };\n  } else {\n    return valueRef !== undefined ? {\n      [vgChannel]: valueRef\n    } : {};\n  }\n}","map":{"version":3,"names":["array","isConditionalDef","isConditionalParameter","expression","parseSelectionPredicate","wrapCondition","model","channelDef","vgChannel","refFn","condition","valueRef","conditions","vgConditions","map","c","conditionValueRef","param","empty","test","undefined"],"sources":["../../../../../src/compile/mark/encode/conditional.ts"],"sourcesContent":[null],"mappings":"AAAA,SAAQA,KAAK,QAAO,WAAW;AAC/B,SAA0CC,gBAAgB,EAAEC,sBAAsB,QAAO,qBAAqB;AAG9G,SAAQC,UAAU,QAAO,iBAAiB;AAC1C,SAAQC,uBAAuB,QAAO,uBAAuB;AAG7D;;;;AAIA,OAAM,SAAUC,aAAaA,CAC3BC,KAAgB,EAChBC,UAAc,EACdC,SAAiB,EACjBC,KAA+B;EAE/B,MAAMC,SAAS,GAAGT,gBAAgB,CAAKM,UAAU,CAAC,IAAIA,UAAU,CAACG,SAAS;EAC1E,MAAMC,QAAQ,GAAGF,KAAK,CAACF,UAAU,CAAC;EAClC,IAAIG,SAAS,EAAE;IACb,MAAME,UAAU,GAAGZ,KAAK,CAACU,SAAS,CAAC;IACnC,MAAMG,YAAY,GAAGD,UAAU,CAACE,GAAG,CAACC,CAAC,IAAG;MACtC,MAAMC,iBAAiB,GAAGP,KAAK,CAACM,CAAC,CAAC;MAClC,IAAIb,sBAAsB,CAAMa,CAAC,CAAC,EAAE;QAClC,MAAM;UAACE,KAAK;UAAEC;QAAK,CAAC,GAAGH,CAAC;QACxB,MAAMI,IAAI,GAAGf,uBAAuB,CAACE,KAAK,EAAE;UAACW,KAAK;UAAEC;QAAK,CAAC,CAAC;QAC3D,OAAO;UAACC,IAAI;UAAE,GAAGH;QAAiB,CAAC;OACpC,MAAM;QACL,MAAMG,IAAI,GAAGhB,UAAU,CAACG,KAAK,EAAGS,CAA+B,CAACI,IAAI,CAAC,CAAC,CAAC;QACvE,OAAO;UAACA,IAAI;UAAE,GAAGH;QAAiB,CAAC;;IAEvC,CAAC,CAAC;IACF,OAAO;MACL,CAACR,SAAS,GAAG,CAAC,GAAGK,YAAY,EAAE,IAAIF,QAAQ,KAAKS,SAAS,GAAG,CAACT,QAAQ,CAAC,GAAG,EAAE,CAAC;KAC7E;GACF,MAAM;IACL,OAAOA,QAAQ,KAAKS,SAAS,GAAG;MAAC,CAACZ,SAAS,GAAGG;IAAQ,CAAC,GAAG,EAAE;;AAEhE"},"metadata":{},"sourceType":"module","externalDependencies":[]}