{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { parseSelector } from 'vega-event-selector';\nimport { identity, isArray, stringValue } from 'vega-util';\nimport { MODIFY, STORE, unitName, VL_SELECTION_RESOLVE, TUPLE, selectionCompilers } from '.';\nimport { dateTimeToExpr, isDateTime, dateTimeToTimestamp } from '../../datetime';\nimport { hasContinuousDomain } from '../../scale';\nimport { SELECTION_ID } from '../../selection';\nimport { keys, replacePathInField, stringify, vals } from '../../util';\nimport { isUnitModel } from '../model';\nimport { parseSelectionExtent } from './parse';\nexport function assembleProjection(proj) {\n  const {\n    signals,\n    hasLegend,\n    index,\n    ...rest\n  } = proj;\n  rest.field = replacePathInField(rest.field);\n  return rest;\n}\nexport function assembleInit(init, isExpr = true, wrap = identity) {\n  if (isArray(init)) {\n    const assembled = init.map(v => assembleInit(v, isExpr, wrap));\n    return isExpr ? `[${assembled.join(', ')}]` : assembled;\n  } else if (isDateTime(init)) {\n    if (isExpr) {\n      return wrap(dateTimeToExpr(init));\n    } else {\n      return wrap(dateTimeToTimestamp(init));\n    }\n  }\n  return isExpr ? wrap(stringify(init)) : init;\n}\nexport function assembleUnitSelectionSignals(model, signals) {\n  for (const selCmpt of vals(model.component.selection ?? {})) {\n    const name = selCmpt.name;\n    let modifyExpr = `${name}${TUPLE}, ${selCmpt.resolve === 'global' ? 'true' : `{unit: ${unitName(model)}}`}`;\n    for (const c of selectionCompilers) {\n      if (!c.defined(selCmpt)) continue;\n      if (c.signals) signals = c.signals(model, selCmpt, signals);\n      if (c.modifyExpr) modifyExpr = c.modifyExpr(model, selCmpt, modifyExpr);\n    }\n    signals.push({\n      name: name + MODIFY,\n      on: [{\n        events: {\n          signal: selCmpt.name + TUPLE\n        },\n        update: `modify(${stringValue(selCmpt.name + STORE)}, ${modifyExpr})`\n      }]\n    });\n  }\n  return cleanupEmptyOnArray(signals);\n}\nexport function assembleFacetSignals(model, signals) {\n  if (model.component.selection && keys(model.component.selection).length) {\n    const name = stringValue(model.getName('cell'));\n    signals.unshift({\n      name: 'facet',\n      value: {},\n      on: [{\n        events: parseSelector('mousemove', 'scope'),\n        update: `isTuple(facet) ? facet : group(${name}).datum`\n      }]\n    });\n  }\n  return cleanupEmptyOnArray(signals);\n}\nexport function assembleTopLevelSignals(model, signals) {\n  let hasSelections = false;\n  for (const selCmpt of vals(model.component.selection ?? {})) {\n    const name = selCmpt.name;\n    const store = stringValue(name + STORE);\n    const hasSg = signals.filter(s => s.name === name);\n    if (hasSg.length === 0) {\n      const resolve = selCmpt.resolve === 'global' ? 'union' : selCmpt.resolve;\n      const isPoint = selCmpt.type === 'point' ? ', true, true)' : ')';\n      signals.push({\n        name: selCmpt.name,\n        update: `${VL_SELECTION_RESOLVE}(${store}, ${stringValue(resolve)}${isPoint}`\n      });\n    }\n    hasSelections = true;\n    for (const c of selectionCompilers) {\n      if (c.defined(selCmpt) && c.topLevelSignals) {\n        signals = c.topLevelSignals(model, selCmpt, signals);\n      }\n    }\n  }\n  if (hasSelections) {\n    const hasUnit = signals.filter(s => s.name === 'unit');\n    if (hasUnit.length === 0) {\n      signals.unshift({\n        name: 'unit',\n        value: {},\n        on: [{\n          events: 'mousemove',\n          update: 'isTuple(group()) ? group() : unit'\n        }]\n      });\n    }\n  }\n  return cleanupEmptyOnArray(signals);\n}\nexport function assembleUnitSelectionData(model, data) {\n  const dataCopy = [...data];\n  const unit = unitName(model, {\n    escape: false\n  });\n  for (const selCmpt of vals(model.component.selection ?? {})) {\n    const store = {\n      name: selCmpt.name + STORE\n    };\n    if (selCmpt.project.hasSelectionId) {\n      store.transform = [{\n        type: 'collect',\n        sort: {\n          field: SELECTION_ID\n        }\n      }];\n    }\n    if (selCmpt.init) {\n      const fields = selCmpt.project.items.map(assembleProjection);\n      store.values = selCmpt.project.hasSelectionId ? selCmpt.init.map(i => ({\n        unit,\n        [SELECTION_ID]: assembleInit(i, false)[0]\n      })) : selCmpt.init.map(i => ({\n        unit,\n        fields,\n        values: assembleInit(i, false)\n      }));\n    }\n    const contains = dataCopy.filter(d => d.name === selCmpt.name + STORE);\n    if (!contains.length) {\n      dataCopy.push(store);\n    }\n  }\n  return dataCopy;\n}\nexport function assembleUnitSelectionMarks(model, marks) {\n  for (const selCmpt of vals(model.component.selection ?? {})) {\n    for (const c of selectionCompilers) {\n      if (c.defined(selCmpt) && c.marks) {\n        marks = c.marks(model, selCmpt, marks);\n      }\n    }\n  }\n  return marks;\n}\nexport function assembleLayerSelectionMarks(model, marks) {\n  for (const child of model.children) {\n    if (isUnitModel(child)) {\n      marks = assembleUnitSelectionMarks(child, marks);\n    }\n  }\n  return marks;\n}\nexport function assembleSelectionScaleDomain(model, extent, scaleCmpt, domain) {\n  const parsedExtent = parseSelectionExtent(model, extent.param, extent);\n  return {\n    signal: hasContinuousDomain(scaleCmpt.get('type')) && isArray(domain) && domain[0] > domain[1] ? `isValid(${parsedExtent}) && reverse(${parsedExtent})` : parsedExtent\n  };\n}\nfunction cleanupEmptyOnArray(signals) {\n  return signals.map(s => {\n    if (s.on && !s.on.length) delete s.on;\n    return s;\n  });\n}","map":{"version":3,"names":["parseSelector","identity","isArray","stringValue","MODIFY","STORE","unitName","VL_SELECTION_RESOLVE","TUPLE","selectionCompilers","dateTimeToExpr","isDateTime","dateTimeToTimestamp","hasContinuousDomain","SELECTION_ID","keys","replacePathInField","stringify","vals","isUnitModel","parseSelectionExtent","assembleProjection","proj","signals","hasLegend","index","rest","field","assembleInit","init","isExpr","wrap","assembled","map","v","join","assembleUnitSelectionSignals","model","selCmpt","component","selection","name","modifyExpr","resolve","c","defined","push","on","events","signal","update","cleanupEmptyOnArray","assembleFacetSignals","length","getName","unshift","value","assembleTopLevelSignals","hasSelections","store","hasSg","filter","s","isPoint","type","topLevelSignals","hasUnit","assembleUnitSelectionData","data","dataCopy","unit","escape","project","hasSelectionId","transform","sort","fields","items","values","i","contains","d","assembleUnitSelectionMarks","marks","assembleLayerSelectionMarks","child","children","assembleSelectionScaleDomain","extent","scaleCmpt","domain","parsedExtent","param","get"],"sources":["../../../../src/compile/selection/assemble.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}