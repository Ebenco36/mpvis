{"ast":null,"code":"import { normalizeLogicalComposition } from './logical';\nimport { normalizePredicate } from './predicate';\nexport function isFilter(t) {\n  return 'filter' in t;\n}\nexport function isImputeSequence(t) {\n  return t?.['stop'] !== undefined;\n}\nexport function isLookup(t) {\n  return 'lookup' in t;\n}\nexport function isLookupData(from) {\n  return 'data' in from;\n}\nexport function isLookupSelection(from) {\n  return 'param' in from;\n}\nexport function isPivot(t) {\n  return 'pivot' in t;\n}\nexport function isDensity(t) {\n  return 'density' in t;\n}\nexport function isQuantile(t) {\n  return 'quantile' in t;\n}\nexport function isRegression(t) {\n  return 'regression' in t;\n}\nexport function isLoess(t) {\n  return 'loess' in t;\n}\nexport function isSample(t) {\n  return 'sample' in t;\n}\nexport function isWindow(t) {\n  return 'window' in t;\n}\nexport function isJoinAggregate(t) {\n  return 'joinaggregate' in t;\n}\nexport function isFlatten(t) {\n  return 'flatten' in t;\n}\nexport function isCalculate(t) {\n  return 'calculate' in t;\n}\nexport function isBin(t) {\n  return 'bin' in t;\n}\nexport function isImpute(t) {\n  return 'impute' in t;\n}\nexport function isTimeUnit(t) {\n  return 'timeUnit' in t;\n}\nexport function isAggregate(t) {\n  return 'aggregate' in t;\n}\nexport function isStack(t) {\n  return 'stack' in t;\n}\nexport function isFold(t) {\n  return 'fold' in t;\n}\nexport function isExtent(t) {\n  return 'extent' in t && !('density' in t);\n}\nexport function normalizeTransform(transform) {\n  return transform.map(t => {\n    if (isFilter(t)) {\n      return {\n        filter: normalizeLogicalComposition(t.filter, normalizePredicate)\n      };\n    }\n    return t;\n  });\n}","map":{"version":3,"names":["normalizeLogicalComposition","normalizePredicate","isFilter","t","isImputeSequence","undefined","isLookup","isLookupData","from","isLookupSelection","isPivot","isDensity","isQuantile","isRegression","isLoess","isSample","isWindow","isJoinAggregate","isFlatten","isCalculate","isBin","isImpute","isTimeUnit","isAggregate","isStack","isFold","isExtent","normalizeTransform","transform","map","filter"],"sources":["../../src/transform.ts"],"sourcesContent":[null],"mappings":"AAKA,SAA4BA,2BAA2B,QAAO,WAAW;AAEzE,SAAQC,kBAAkB,QAAkB,aAAa;AA6BzD,OAAM,SAAUC,QAAQA,CAACC,CAAY;EACnC,OAAO,QAAQ,IAAIA,CAAC;AACtB;AA8NA,OAAM,SAAUC,gBAAgBA,CAACD,CAAqC;EACpE,OAAOA,CAAC,GAAG,MAAM,CAAC,KAAKE,SAAS;AAClC;AAyGA,OAAM,SAAUC,QAAQA,CAACH,CAAY;EACnC,OAAO,QAAQ,IAAIA,CAAC;AACtB;AAEA,OAAM,SAAUI,YAAYA,CAACC,IAAkC;EAC7D,OAAO,MAAM,IAAIA,IAAI;AACvB;AAEA,OAAM,SAAUC,iBAAiBA,CAACD,IAAkC;EAClE,OAAO,OAAO,IAAIA,IAAI;AACxB;AAyDA,OAAM,SAAUE,OAAOA,CAACP,CAAY;EAClC,OAAO,OAAO,IAAIA,CAAC;AACrB;AAgEA,OAAM,SAAUQ,SAASA,CAACR,CAAY;EACpC,OAAO,SAAS,IAAIA,CAAC;AACvB;AA+BA,OAAM,SAAUS,UAAUA,CAACT,CAAY;EACrC,OAAO,UAAU,IAAIA,CAAC;AACxB;AAsDA,OAAM,SAAUU,YAAYA,CAACV,CAAY;EACvC,OAAO,YAAY,IAAIA,CAAC;AAC1B;AAiCA,OAAM,SAAUW,OAAOA,CAACX,CAAY;EAClC,OAAO,OAAO,IAAIA,CAAC;AACrB;AAEA,OAAM,SAAUY,QAAQA,CAACZ,CAAY;EACnC,OAAO,QAAQ,IAAIA,CAAC;AACtB;AAEA,OAAM,SAAUa,QAAQA,CAACb,CAAY;EACnC,OAAO,QAAQ,IAAIA,CAAC;AACtB;AAEA,OAAM,SAAUc,eAAeA,CAACd,CAAY;EAC1C,OAAO,eAAe,IAAIA,CAAC;AAC7B;AAEA,OAAM,SAAUe,SAASA,CAACf,CAAY;EACpC,OAAO,SAAS,IAAIA,CAAC;AACvB;AACA,OAAM,SAAUgB,WAAWA,CAAChB,CAAY;EACtC,OAAO,WAAW,IAAIA,CAAC;AACzB;AAEA,OAAM,SAAUiB,KAAKA,CAACjB,CAAY;EAChC,OAAO,KAAK,IAAIA,CAAC;AACnB;AAEA,OAAM,SAAUkB,QAAQA,CAAClB,CAAY;EACnC,OAAO,QAAQ,IAAIA,CAAC;AACtB;AAEA,OAAM,SAAUmB,UAAUA,CAACnB,CAAY;EACrC,OAAO,UAAU,IAAIA,CAAC;AACxB;AAEA,OAAM,SAAUoB,WAAWA,CAACpB,CAAY;EACtC,OAAO,WAAW,IAAIA,CAAC;AACzB;AAEA,OAAM,SAAUqB,OAAOA,CAACrB,CAAY;EAClC,OAAO,OAAO,IAAIA,CAAC;AACrB;AAEA,OAAM,SAAUsB,MAAMA,CAACtB,CAAY;EACjC,OAAO,MAAM,IAAIA,CAAC;AACpB;AAEA,OAAM,SAAUuB,QAAQA,CAACvB,CAAY;EACnC,OAAO,QAAQ,IAAIA,CAAC,IAAI,EAAE,SAAS,IAAIA,CAAC,CAAC;AAC3C;AAsBA,OAAM,SAAUwB,kBAAkBA,CAACC,SAAsB;EACvD,OAAOA,SAAS,CAACC,GAAG,CAAC1B,CAAC,IAAG;IACvB,IAAID,QAAQ,CAACC,CAAC,CAAC,EAAE;MACf,OAAO;QACL2B,MAAM,EAAE9B,2BAA2B,CAACG,CAAC,CAAC2B,MAAM,EAAE7B,kBAAkB;OACjE;;IAEH,OAAOE,CAAC;EACV,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}