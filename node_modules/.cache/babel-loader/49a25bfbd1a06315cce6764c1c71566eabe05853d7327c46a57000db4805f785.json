{"ast":null,"code":"import { getFormatMixins, isFieldOrDatumDef, isValueDef } from '../../../channeldef';\nimport { signalOrValueRef } from '../../common';\nimport { formatSignalRef } from '../../format';\nimport { wrapCondition } from './conditional';\nexport function text(model, channel = 'text') {\n  const channelDef = model.encoding[channel];\n  return wrapCondition(model, channelDef, channel, cDef => textRef(cDef, model.config));\n}\nexport function textRef(channelDef, config, expr = 'datum') {\n  // text\n  if (channelDef) {\n    if (isValueDef(channelDef)) {\n      return signalOrValueRef(channelDef.value);\n    }\n    if (isFieldOrDatumDef(channelDef)) {\n      const {\n        format,\n        formatType\n      } = getFormatMixins(channelDef);\n      return formatSignalRef({\n        fieldOrDatumDef: channelDef,\n        format,\n        formatType,\n        expr,\n        config\n      });\n    }\n  }\n  return undefined;\n}","map":{"version":3,"names":["getFormatMixins","isFieldOrDatumDef","isValueDef","signalOrValueRef","formatSignalRef","wrapCondition","text","model","channel","channelDef","encoding","cDef","textRef","config","expr","value","format","formatType","fieldOrDatumDef","undefined"],"sources":["../../../../../src/compile/mark/encode/text.ts"],"sourcesContent":[null],"mappings":"AAAA,SAAQA,eAAe,EAAEC,iBAAiB,EAAEC,UAAU,QAAO,qBAAqB;AAIlF,SAAQC,gBAAgB,QAAO,cAAc;AAC7C,SAAQC,eAAe,QAAO,cAAc;AAE5C,SAAQC,aAAa,QAAO,eAAe;AAE3C,OAAM,SAAUC,IAAIA,CAACC,KAAgB,EAAEC,OAAA,GAAmD,MAAM;EAC9F,MAAMC,UAAU,GAAGF,KAAK,CAACG,QAAQ,CAACF,OAAO,CAAC;EAC1C,OAAOH,aAAa,CAACE,KAAK,EAAEE,UAAU,EAAED,OAAO,EAAEG,IAAI,IAAIC,OAAO,CAACD,IAAI,EAAEJ,KAAK,CAACM,MAAM,CAAC,CAAC;AACvF;AAEA,OAAM,SAAUD,OAAOA,CACrBH,UAAgD,EAChDI,MAAc,EACdC,IAAA,GAAgC,OAAO;EAEvC;EACA,IAAIL,UAAU,EAAE;IACd,IAAIP,UAAU,CAACO,UAAU,CAAC,EAAE;MAC1B,OAAON,gBAAgB,CAACM,UAAU,CAACM,KAAK,CAAC;;IAE3C,IAAId,iBAAiB,CAACQ,UAAU,CAAC,EAAE;MACjC,MAAM;QAACO,MAAM;QAAEC;MAAU,CAAC,GAAGjB,eAAe,CAACS,UAAU,CAAC;MACxD,OAAOL,eAAe,CAAC;QAACc,eAAe,EAAET,UAAU;QAAEO,MAAM;QAAEC,UAAU;QAAEH,IAAI;QAAED;MAAM,CAAC,CAAC;;;EAG3F,OAAOM,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}