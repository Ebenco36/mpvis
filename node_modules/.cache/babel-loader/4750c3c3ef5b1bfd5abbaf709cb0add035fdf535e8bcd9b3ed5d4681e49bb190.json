{"ast":null,"code":"import { array, isArray, stringValue } from 'vega-util';\nimport { COLOR, OPACITY } from '../../channel';\nimport { hasConditionalValueDef, isFieldDef, isValueDef } from '../../channeldef';\nimport { FILL_STROKE_CONFIG } from '../../mark';\nimport { getFirstDefined, isEmpty, varName } from '../../util';\nimport { applyMarkConfig, signalOrValueRef } from '../common';\nimport { formatCustomType, isCustomFormatType } from '../format';\nimport * as mixins from '../mark/encode';\nimport { STORE } from '../selection';\nexport const legendEncodeRules = {\n  symbols,\n  gradient,\n  labels,\n  entries\n};\nexport function symbols(symbolsSpec, {\n  fieldOrDatumDef,\n  model,\n  channel,\n  legendCmpt,\n  legendType\n}) {\n  if (legendType !== 'symbol') {\n    return undefined;\n  }\n  const {\n    markDef,\n    encoding,\n    config,\n    mark\n  } = model;\n  const filled = markDef.filled && mark !== 'trail';\n  let out = {\n    ...applyMarkConfig({}, model, FILL_STROKE_CONFIG),\n    ...mixins.color(model, {\n      filled\n    })\n  }; // FIXME: remove this when VgEncodeEntry is compatible with SymbolEncodeEntry\n  const symbolOpacity = legendCmpt.get('symbolOpacity') ?? config.legend.symbolOpacity;\n  const symbolFillColor = legendCmpt.get('symbolFillColor') ?? config.legend.symbolFillColor;\n  const symbolStrokeColor = legendCmpt.get('symbolStrokeColor') ?? config.legend.symbolStrokeColor;\n  const opacity = symbolOpacity === undefined ? getMaxValue(encoding.opacity) ?? markDef.opacity : undefined;\n  if (out.fill) {\n    // for fill legend, we don't want any fill in symbol\n    if (channel === 'fill' || filled && channel === COLOR) {\n      delete out.fill;\n    } else {\n      if (out.fill['field']) {\n        // For others, set fill to some opaque value (or nothing if a color is already set)\n        if (symbolFillColor) {\n          delete out.fill;\n        } else {\n          out.fill = signalOrValueRef(config.legend.symbolBaseFillColor ?? 'black');\n          out.fillOpacity = signalOrValueRef(opacity ?? 1);\n        }\n      } else if (isArray(out.fill)) {\n        const fill = getFirstConditionValue(encoding.fill ?? encoding.color) ?? markDef.fill ?? (filled && markDef.color);\n        if (fill) {\n          out.fill = signalOrValueRef(fill);\n        }\n      }\n    }\n  }\n  if (out.stroke) {\n    if (channel === 'stroke' || !filled && channel === COLOR) {\n      delete out.stroke;\n    } else {\n      if (out.stroke['field'] || symbolStrokeColor) {\n        // For others, remove stroke field\n        delete out.stroke;\n      } else if (isArray(out.stroke)) {\n        const stroke = getFirstDefined(getFirstConditionValue(encoding.stroke || encoding.color), markDef.stroke, filled ? markDef.color : undefined);\n        if (stroke) {\n          out.stroke = {\n            value: stroke\n          };\n        }\n      }\n    }\n  }\n  if (channel !== OPACITY) {\n    const condition = isFieldDef(fieldOrDatumDef) && selectedCondition(model, legendCmpt, fieldOrDatumDef);\n    if (condition) {\n      out.opacity = [{\n        test: condition,\n        ...signalOrValueRef(opacity ?? 1)\n      }, signalOrValueRef(config.legend.unselectedOpacity)];\n    } else if (opacity) {\n      out.opacity = signalOrValueRef(opacity);\n    }\n  }\n  out = {\n    ...out,\n    ...symbolsSpec\n  };\n  return isEmpty(out) ? undefined : out;\n}\nexport function gradient(gradientSpec, {\n  model,\n  legendType,\n  legendCmpt\n}) {\n  if (legendType !== 'gradient') {\n    return undefined;\n  }\n  const {\n    config,\n    markDef,\n    encoding\n  } = model;\n  let out = {};\n  const gradientOpacity = legendCmpt.get('gradientOpacity') ?? config.legend.gradientOpacity;\n  const opacity = gradientOpacity === undefined ? getMaxValue(encoding.opacity) || markDef.opacity : undefined;\n  if (opacity) {\n    // only apply opacity if it is neither zero or undefined\n    out.opacity = signalOrValueRef(opacity);\n  }\n  out = {\n    ...out,\n    ...gradientSpec\n  };\n  return isEmpty(out) ? undefined : out;\n}\nexport function labels(specifiedlabelsSpec, {\n  fieldOrDatumDef,\n  model,\n  channel,\n  legendCmpt\n}) {\n  const legend = model.legend(channel) || {};\n  const config = model.config;\n  const condition = isFieldDef(fieldOrDatumDef) ? selectedCondition(model, legendCmpt, fieldOrDatumDef) : undefined;\n  const opacity = condition ? [{\n    test: condition,\n    value: 1\n  }, {\n    value: config.legend.unselectedOpacity\n  }] : undefined;\n  const {\n    format,\n    formatType\n  } = legend;\n  let text = undefined;\n  if (isCustomFormatType(formatType)) {\n    text = formatCustomType({\n      fieldOrDatumDef,\n      field: 'datum.value',\n      format,\n      formatType,\n      config\n    });\n  } else if (format === undefined && formatType === undefined && config.customFormatTypes) {\n    if (fieldOrDatumDef.type === 'quantitative' && config.numberFormatType) {\n      text = formatCustomType({\n        fieldOrDatumDef,\n        field: 'datum.value',\n        format: config.numberFormat,\n        formatType: config.numberFormatType,\n        config\n      });\n    } else if (fieldOrDatumDef.type === 'temporal' && config.timeFormatType && isFieldDef(fieldOrDatumDef) && fieldOrDatumDef.timeUnit === undefined) {\n      text = formatCustomType({\n        fieldOrDatumDef,\n        field: 'datum.value',\n        format: config.timeFormat,\n        formatType: config.timeFormatType,\n        config\n      });\n    }\n  }\n  const labelsSpec = {\n    ...(opacity ? {\n      opacity\n    } : {}),\n    ...(text ? {\n      text\n    } : {}),\n    ...specifiedlabelsSpec\n  };\n  return isEmpty(labelsSpec) ? undefined : labelsSpec;\n}\nexport function entries(entriesSpec, {\n  legendCmpt\n}) {\n  const selections = legendCmpt.get('selections');\n  return selections?.length ? {\n    ...entriesSpec,\n    fill: {\n      value: 'transparent'\n    }\n  } : entriesSpec;\n}\nfunction getMaxValue(channelDef) {\n  return getConditionValue(channelDef, (v, conditionalDef) => Math.max(v, conditionalDef.value));\n}\nexport function getFirstConditionValue(channelDef) {\n  return getConditionValue(channelDef, (v, conditionalDef) => {\n    return getFirstDefined(v, conditionalDef.value);\n  });\n}\nfunction getConditionValue(channelDef, reducer) {\n  if (hasConditionalValueDef(channelDef)) {\n    return array(channelDef.condition).reduce(reducer, channelDef.value);\n  } else if (isValueDef(channelDef)) {\n    return channelDef.value;\n  }\n  return undefined;\n}\nfunction selectedCondition(model, legendCmpt, fieldDef) {\n  const selections = legendCmpt.get('selections');\n  if (!selections?.length) return undefined;\n  const field = stringValue(fieldDef.field);\n  return selections.map(name => {\n    const store = stringValue(varName(name) + STORE);\n    return `(!length(data(${store})) || (${name}[${field}] && indexof(${name}[${field}], datum.value) >= 0))`;\n  }).join(' || ');\n}","map":{"version":3,"names":["array","isArray","stringValue","COLOR","OPACITY","hasConditionalValueDef","isFieldDef","isValueDef","FILL_STROKE_CONFIG","getFirstDefined","isEmpty","varName","applyMarkConfig","signalOrValueRef","formatCustomType","isCustomFormatType","mixins","STORE","legendEncodeRules","symbols","gradient","labels","entries","symbolsSpec","fieldOrDatumDef","model","channel","legendCmpt","legendType","undefined","markDef","encoding","config","mark","filled","out","color","symbolOpacity","get","legend","symbolFillColor","symbolStrokeColor","opacity","getMaxValue","fill","symbolBaseFillColor","fillOpacity","getFirstConditionValue","stroke","value","condition","selectedCondition","test","unselectedOpacity","gradientSpec","gradientOpacity","specifiedlabelsSpec","format","formatType","text","field","customFormatTypes","type","numberFormatType","numberFormat","timeFormatType","timeUnit","timeFormat","labelsSpec","entriesSpec","selections","length","channelDef","getConditionValue","v","conditionalDef","Math","max","reducer","reduce","fieldDef","map","name","store","join"],"sources":["../../../../src/compile/legend/encode.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}