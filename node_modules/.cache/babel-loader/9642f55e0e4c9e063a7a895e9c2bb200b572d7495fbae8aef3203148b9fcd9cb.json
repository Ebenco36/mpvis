{"ast":null,"code":"import { isArray } from 'vega-util';\nimport { isConditionalAxisValue } from '../axis';\nimport { GEOPOSITION_CHANNELS, NONPOSITION_SCALE_CHANNELS, POSITION_SCALE_CHANNELS, SCALE_CHANNELS, supportLegend, X, Y } from '../channel';\nimport { getFieldDef, getFieldOrDatumDef, isFieldOrDatumDef, isTypedFieldDef } from '../channeldef';\nimport { isGraticuleGenerator } from '../data';\nimport * as vlEncoding from '../encoding';\nimport { initEncoding } from '../encoding';\nimport { replaceExprRef } from '../expr';\nimport { GEOSHAPE, isMarkDef } from '../mark';\nimport { isSelectionParameter } from '../selection';\nimport { isFrameMixins } from '../spec/base';\nimport { stack } from '../stack';\nimport { keys } from '../util';\nimport { assembleAxisSignals } from './axis/assemble';\nimport { parseUnitAxes } from './axis/parse';\nimport { signalOrValueRefWithCondition, signalRefOrValue } from './common';\nimport { parseData } from './data/parse';\nimport { assembleLayoutSignals } from './layoutsize/assemble';\nimport { initLayoutSize } from './layoutsize/init';\nimport { parseUnitLayoutSize } from './layoutsize/parse';\nimport { defaultFilled, initMarkdef } from './mark/init';\nimport { parseMarkGroups } from './mark/mark';\nimport { isLayerModel, ModelWithField } from './model';\nimport { assembleTopLevelSignals, assembleUnitSelectionData, assembleUnitSelectionMarks, assembleUnitSelectionSignals } from './selection/assemble';\nimport { parseUnitSelection } from './selection/parse';\n/**\n * Internal model of Vega-Lite specification for the compiler.\n */\nexport class UnitModel extends ModelWithField {\n  constructor(spec, parent, parentGivenName, parentGivenSize = {}, config) {\n    super(spec, 'unit', parent, parentGivenName, config, undefined, isFrameMixins(spec) ? spec.view : undefined);\n    this.specifiedScales = {};\n    this.specifiedAxes = {};\n    this.specifiedLegends = {};\n    this.specifiedProjection = {};\n    this.selection = [];\n    this.children = [];\n    const markDef = isMarkDef(spec.mark) ? {\n      ...spec.mark\n    } : {\n      type: spec.mark\n    };\n    const mark = markDef.type;\n    // Need to init filled before other mark properties because encoding depends on filled but other mark properties depend on types inside encoding\n    if (markDef.filled === undefined) {\n      markDef.filled = defaultFilled(markDef, config, {\n        graticule: spec.data && isGraticuleGenerator(spec.data)\n      });\n    }\n    const encoding = this.encoding = initEncoding(spec.encoding || {}, mark, markDef.filled, config);\n    this.markDef = initMarkdef(markDef, encoding, config);\n    this.size = initLayoutSize({\n      encoding,\n      size: isFrameMixins(spec) ? {\n        ...parentGivenSize,\n        ...(spec.width ? {\n          width: spec.width\n        } : {}),\n        ...(spec.height ? {\n          height: spec.height\n        } : {})\n      } : parentGivenSize\n    });\n    // calculate stack properties\n    this.stack = stack(this.markDef, encoding);\n    this.specifiedScales = this.initScales(mark, encoding);\n    this.specifiedAxes = this.initAxes(encoding);\n    this.specifiedLegends = this.initLegends(encoding);\n    this.specifiedProjection = spec.projection;\n    // Selections will be initialized upon parse.\n    this.selection = (spec.params ?? []).filter(p => isSelectionParameter(p));\n  }\n  get hasProjection() {\n    const {\n      encoding\n    } = this;\n    const isGeoShapeMark = this.mark === GEOSHAPE;\n    const hasGeoPosition = encoding && GEOPOSITION_CHANNELS.some(channel => isFieldOrDatumDef(encoding[channel]));\n    return isGeoShapeMark || hasGeoPosition;\n  }\n  /**\n   * Return specified Vega-Lite scale domain for a particular channel\n   * @param channel\n   */\n  scaleDomain(channel) {\n    const scale = this.specifiedScales[channel];\n    return scale ? scale.domain : undefined;\n  }\n  axis(channel) {\n    return this.specifiedAxes[channel];\n  }\n  legend(channel) {\n    return this.specifiedLegends[channel];\n  }\n  initScales(mark, encoding) {\n    return SCALE_CHANNELS.reduce((scales, channel) => {\n      const fieldOrDatumDef = getFieldOrDatumDef(encoding[channel]);\n      if (fieldOrDatumDef) {\n        scales[channel] = this.initScale(fieldOrDatumDef.scale ?? {});\n      }\n      return scales;\n    }, {});\n  }\n  initScale(scale) {\n    const {\n      domain,\n      range\n    } = scale;\n    // TODO: we could simplify this function if we had a recursive replace function\n    const scaleInternal = replaceExprRef(scale);\n    if (isArray(domain)) {\n      scaleInternal.domain = domain.map(signalRefOrValue);\n    }\n    if (isArray(range)) {\n      scaleInternal.range = range.map(signalRefOrValue);\n    }\n    return scaleInternal;\n  }\n  initAxes(encoding) {\n    return POSITION_SCALE_CHANNELS.reduce((_axis, channel) => {\n      // Position Axis\n      // TODO: handle ConditionFieldDef\n      const channelDef = encoding[channel];\n      if (isFieldOrDatumDef(channelDef) || channel === X && isFieldOrDatumDef(encoding.x2) || channel === Y && isFieldOrDatumDef(encoding.y2)) {\n        const axisSpec = isFieldOrDatumDef(channelDef) ? channelDef.axis : undefined;\n        _axis[channel] = axisSpec ? this.initAxis({\n          ...axisSpec\n        }) // convert truthy value to object\n        : axisSpec;\n      }\n      return _axis;\n    }, {});\n  }\n  initAxis(axis) {\n    const props = keys(axis);\n    const axisInternal = {};\n    for (const prop of props) {\n      const val = axis[prop];\n      axisInternal[prop] = isConditionalAxisValue(val) ? signalOrValueRefWithCondition(val) : signalRefOrValue(val);\n    }\n    return axisInternal;\n  }\n  initLegends(encoding) {\n    return NONPOSITION_SCALE_CHANNELS.reduce((_legend, channel) => {\n      const fieldOrDatumDef = getFieldOrDatumDef(encoding[channel]);\n      if (fieldOrDatumDef && supportLegend(channel)) {\n        const legend = fieldOrDatumDef.legend;\n        _legend[channel] = legend ? replaceExprRef(legend) // convert truthy value to object\n        : legend;\n      }\n      return _legend;\n    }, {});\n  }\n  parseData() {\n    this.component.data = parseData(this);\n  }\n  parseLayoutSize() {\n    parseUnitLayoutSize(this);\n  }\n  parseSelections() {\n    this.component.selection = parseUnitSelection(this, this.selection);\n  }\n  parseMarkGroup() {\n    this.component.mark = parseMarkGroups(this);\n  }\n  parseAxesAndHeaders() {\n    this.component.axes = parseUnitAxes(this);\n  }\n  assembleSelectionTopLevelSignals(signals) {\n    return assembleTopLevelSignals(this, signals);\n  }\n  assembleSignals() {\n    return [...assembleAxisSignals(this), ...assembleUnitSelectionSignals(this, [])];\n  }\n  assembleSelectionData(data) {\n    return assembleUnitSelectionData(this, data);\n  }\n  assembleLayout() {\n    return null;\n  }\n  assembleLayoutSignals() {\n    return assembleLayoutSignals(this);\n  }\n  assembleMarks() {\n    let marks = this.component.mark ?? [];\n    // If this unit is part of a layer, selections should augment\n    // all in concert rather than each unit individually. This\n    // ensures correct interleaving of clipping and brushed marks.\n    if (!this.parent || !isLayerModel(this.parent)) {\n      marks = assembleUnitSelectionMarks(this, marks);\n    }\n    return marks.map(this.correctDataNames);\n  }\n  assembleGroupStyle() {\n    const {\n      style\n    } = this.view || {};\n    if (style !== undefined) {\n      return style;\n    }\n    if (this.encoding.x || this.encoding.y) {\n      return 'cell';\n    } else {\n      return 'view';\n    }\n  }\n  getMapping() {\n    return this.encoding;\n  }\n  get mark() {\n    return this.markDef.type;\n  }\n  channelHasField(channel) {\n    return vlEncoding.channelHasField(this.encoding, channel);\n  }\n  fieldDef(channel) {\n    const channelDef = this.encoding[channel];\n    return getFieldDef(channelDef);\n  }\n  typedFieldDef(channel) {\n    const fieldDef = this.fieldDef(channel);\n    if (isTypedFieldDef(fieldDef)) {\n      return fieldDef;\n    }\n    return null;\n  }\n}","map":{"version":3,"names":["isArray","isConditionalAxisValue","GEOPOSITION_CHANNELS","NONPOSITION_SCALE_CHANNELS","POSITION_SCALE_CHANNELS","SCALE_CHANNELS","supportLegend","X","Y","getFieldDef","getFieldOrDatumDef","isFieldOrDatumDef","isTypedFieldDef","isGraticuleGenerator","vlEncoding","initEncoding","replaceExprRef","GEOSHAPE","isMarkDef","isSelectionParameter","isFrameMixins","stack","keys","assembleAxisSignals","parseUnitAxes","signalOrValueRefWithCondition","signalRefOrValue","parseData","assembleLayoutSignals","initLayoutSize","parseUnitLayoutSize","defaultFilled","initMarkdef","parseMarkGroups","isLayerModel","ModelWithField","assembleTopLevelSignals","assembleUnitSelectionData","assembleUnitSelectionMarks","assembleUnitSelectionSignals","parseUnitSelection","UnitModel","constructor","spec","parent","parentGivenName","parentGivenSize","config","undefined","view","specifiedScales","specifiedAxes","specifiedLegends","specifiedProjection","selection","children","markDef","mark","type","filled","graticule","data","encoding","size","width","height","initScales","initAxes","initLegends","projection","params","filter","p","hasProjection","isGeoShapeMark","hasGeoPosition","some","channel","scaleDomain","scale","domain","axis","legend","reduce","scales","fieldOrDatumDef","initScale","range","scaleInternal","map","_axis","channelDef","x2","y2","axisSpec","initAxis","props","axisInternal","prop","val","_legend","component","parseLayoutSize","parseSelections","parseMarkGroup","parseAxesAndHeaders","axes","assembleSelectionTopLevelSignals","signals","assembleSignals","assembleSelectionData","assembleLayout","assembleMarks","marks","correctDataNames","assembleGroupStyle","style","x","y","getMapping","channelHasField","fieldDef","typedFieldDef"],"sources":["../../../src/compile/unit.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}