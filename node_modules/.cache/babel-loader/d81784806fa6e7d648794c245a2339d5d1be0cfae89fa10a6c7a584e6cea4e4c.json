{"ast":null,"code":"import { entries, isEmpty } from '../../../util';\nimport { getMarkPropOrConfig, signalOrValueRef } from '../../common';\nimport { VG_MARK_INDEX } from './../../../vega.schema';\nimport { wrapCondition } from './conditional';\nimport { textRef } from './text';\nimport { tooltipData } from './tooltip';\nexport function aria(model) {\n  const {\n    markDef,\n    config\n  } = model;\n  const enableAria = getMarkPropOrConfig('aria', markDef, config);\n  // We can ignore other aria properties if ariaHidden is true.\n  if (enableAria === false) {\n    // getMarkGroups sets aria to false already so we don't have to set it in the encode block\n    return {};\n  }\n  return {\n    ...(enableAria ? {\n      aria: enableAria\n    } : {}),\n    ...ariaRoleDescription(model),\n    ...description(model)\n  };\n}\nfunction ariaRoleDescription(model) {\n  const {\n    mark,\n    markDef,\n    config\n  } = model;\n  if (config.aria === false) {\n    return {};\n  }\n  const ariaRoleDesc = getMarkPropOrConfig('ariaRoleDescription', markDef, config);\n  if (ariaRoleDesc != null) {\n    return {\n      ariaRoleDescription: {\n        value: ariaRoleDesc\n      }\n    };\n  }\n  return mark in VG_MARK_INDEX ? {} : {\n    ariaRoleDescription: {\n      value: mark\n    }\n  };\n}\nexport function description(model) {\n  const {\n    encoding,\n    markDef,\n    config,\n    stack\n  } = model;\n  const channelDef = encoding.description;\n  if (channelDef) {\n    return wrapCondition(model, channelDef, 'description', cDef => textRef(cDef, model.config));\n  }\n  // Use default from mark def or config if defined.\n  // Functions in encode usually just return undefined but since we are defining a default below, we need to check the default here.\n  const descriptionValue = getMarkPropOrConfig('description', markDef, config);\n  if (descriptionValue != null) {\n    return {\n      description: signalOrValueRef(descriptionValue)\n    };\n  }\n  if (config.aria === false) {\n    return {};\n  }\n  const data = tooltipData(encoding, stack, config);\n  if (isEmpty(data)) {\n    return undefined;\n  }\n  return {\n    description: {\n      signal: entries(data).map(([key, value], index) => `\"${index > 0 ? '; ' : ''}${key}: \" + (${value})`).join(' + ')\n    }\n  };\n}","map":{"version":3,"names":["entries","isEmpty","getMarkPropOrConfig","signalOrValueRef","VG_MARK_INDEX","wrapCondition","textRef","tooltipData","aria","model","markDef","config","enableAria","ariaRoleDescription","description","mark","ariaRoleDesc","value","encoding","stack","channelDef","cDef","descriptionValue","data","undefined","signal","map","key","index","join"],"sources":["../../../../../src/compile/mark/encode/aria.ts"],"sourcesContent":[null],"mappings":"AAAA,SAAQA,OAAO,EAAEC,OAAO,QAAO,eAAe;AAC9C,SAAQC,mBAAmB,EAAEC,gBAAgB,QAAO,cAAc;AAClE,SAAQC,aAAa,QAAO,wBAAwB;AAEpD,SAAQC,aAAa,QAAO,eAAe;AAC3C,SAAQC,OAAO,QAAO,QAAQ;AAC9B,SAAQC,WAAW,QAAO,WAAW;AAErC,OAAM,SAAUC,IAAIA,CAACC,KAAgB;EACnC,MAAM;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAGF,KAAK;EAE/B,MAAMG,UAAU,GAAGV,mBAAmB,CAAC,MAAM,EAAEQ,OAAO,EAAEC,MAAM,CAAC;EAE/D;EACA,IAAIC,UAAU,KAAK,KAAK,EAAE;IACxB;IACA,OAAO,EAAE;;EAGX,OAAO;IACL,IAAIA,UAAU,GAAG;MAACJ,IAAI,EAAEI;IAAU,CAAC,GAAG,EAAE,CAAC;IACzC,GAAGC,mBAAmB,CAACJ,KAAK,CAAC;IAC7B,GAAGK,WAAW,CAACL,KAAK;GACrB;AACH;AAEA,SAASI,mBAAmBA,CAACJ,KAAgB;EAC3C,MAAM;IAACM,IAAI;IAAEL,OAAO;IAAEC;EAAM,CAAC,GAAGF,KAAK;EAErC,IAAIE,MAAM,CAACH,IAAI,KAAK,KAAK,EAAE;IACzB,OAAO,EAAE;;EAGX,MAAMQ,YAAY,GAAGd,mBAAmB,CAAC,qBAAqB,EAAEQ,OAAO,EAAEC,MAAM,CAAC;EAEhF,IAAIK,YAAY,IAAI,IAAI,EAAE;IACxB,OAAO;MAACH,mBAAmB,EAAE;QAACI,KAAK,EAAED;MAAY;IAAC,CAAC;;EAGrD,OAAOD,IAAI,IAAIX,aAAa,GAAG,EAAE,GAAG;IAACS,mBAAmB,EAAE;MAACI,KAAK,EAAEF;IAAI;EAAC,CAAC;AAC1E;AAEA,OAAM,SAAUD,WAAWA,CAACL,KAAgB;EAC1C,MAAM;IAACS,QAAQ;IAAER,OAAO;IAAEC,MAAM;IAAEQ;EAAK,CAAC,GAAGV,KAAK;EAChD,MAAMW,UAAU,GAAGF,QAAQ,CAACJ,WAAW;EAEvC,IAAIM,UAAU,EAAE;IACd,OAAOf,aAAa,CAACI,KAAK,EAAEW,UAAU,EAAE,aAAa,EAAEC,IAAI,IAAIf,OAAO,CAACe,IAAI,EAAEZ,KAAK,CAACE,MAAM,CAAC,CAAC;;EAG7F;EACA;EACA,MAAMW,gBAAgB,GAAGpB,mBAAmB,CAAC,aAAa,EAAEQ,OAAO,EAAEC,MAAM,CAAC;EAC5E,IAAIW,gBAAgB,IAAI,IAAI,EAAE;IAC5B,OAAO;MACLR,WAAW,EAAEX,gBAAgB,CAACmB,gBAAgB;KAC/C;;EAGH,IAAIX,MAAM,CAACH,IAAI,KAAK,KAAK,EAAE;IACzB,OAAO,EAAE;;EAGX,MAAMe,IAAI,GAAGhB,WAAW,CAACW,QAAQ,EAAEC,KAAK,EAAER,MAAM,CAAC;EAEjD,IAAIV,OAAO,CAACsB,IAAI,CAAC,EAAE;IACjB,OAAOC,SAAS;;EAGlB,OAAO;IACLV,WAAW,EAAE;MACXW,MAAM,EAAEzB,OAAO,CAACuB,IAAI,CAAC,CAClBG,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEV,KAAK,CAAC,EAAEW,KAAK,KAAK,IAAIA,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,EAAE,GAAGD,GAAG,UAAUV,KAAK,GAAG,CAAC,CAC/EY,IAAI,CAAC,KAAK;;GAEhB;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}