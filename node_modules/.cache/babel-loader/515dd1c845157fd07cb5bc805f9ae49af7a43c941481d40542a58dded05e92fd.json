{"ast":null,"code":"import { isNumber, isObject } from 'vega-util';\nimport { keys } from '../util';\nimport { isConcatSpec, isVConcatSpec } from './concat';\nimport { isFacetMapping, isFacetSpec } from './facet';\nexport function getStepFor({\n  step,\n  offsetIsDiscrete\n}) {\n  if (offsetIsDiscrete) {\n    return step.for ?? 'offset';\n  } else {\n    return 'position';\n  }\n}\nexport function isStep(size) {\n  return isObject(size) && size['step'] !== undefined;\n}\nexport function isFrameMixins(o) {\n  return o['view'] || o['width'] || o['height'];\n}\nexport const DEFAULT_SPACING = 20;\nconst COMPOSITION_LAYOUT_INDEX = {\n  align: 1,\n  bounds: 1,\n  center: 1,\n  columns: 1,\n  spacing: 1\n};\nconst COMPOSITION_LAYOUT_PROPERTIES = keys(COMPOSITION_LAYOUT_INDEX);\nexport function extractCompositionLayout(spec, specType, config) {\n  const compositionConfig = config[specType];\n  const layout = {};\n  // Apply config first\n  const {\n    spacing: spacingConfig,\n    columns\n  } = compositionConfig;\n  if (spacingConfig !== undefined) {\n    layout.spacing = spacingConfig;\n  }\n  if (columns !== undefined) {\n    if (isFacetSpec(spec) && !isFacetMapping(spec.facet) || isConcatSpec(spec)) {\n      layout.columns = columns;\n    }\n  }\n  if (isVConcatSpec(spec)) {\n    layout.columns = 1;\n  }\n  // Then copy properties from the spec\n  for (const prop of COMPOSITION_LAYOUT_PROPERTIES) {\n    if (spec[prop] !== undefined) {\n      if (prop === 'spacing') {\n        const spacing = spec[prop];\n        layout[prop] = isNumber(spacing) ? spacing : {\n          row: spacing.row ?? spacingConfig,\n          column: spacing.column ?? spacingConfig\n        };\n      } else {\n        layout[prop] = spec[prop];\n      }\n    }\n  }\n  return layout;\n}","map":{"version":3,"names":["isNumber","isObject","keys","isConcatSpec","isVConcatSpec","isFacetMapping","isFacetSpec","getStepFor","step","offsetIsDiscrete","for","isStep","size","undefined","isFrameMixins","o","DEFAULT_SPACING","COMPOSITION_LAYOUT_INDEX","align","bounds","center","columns","spacing","COMPOSITION_LAYOUT_PROPERTIES","extractCompositionLayout","spec","specType","config","compositionConfig","layout","spacingConfig","facet","prop","row","column"],"sources":["../../../src/spec/base.ts"],"sourcesContent":[null],"mappings":"AACA,SAAQA,QAAQ,EAAEC,QAAQ,QAAO,WAAW;AAQ5C,SAAcC,IAAI,QAAO,SAAS;AAElC,SAAQC,YAAY,EAAEC,aAAa,QAAO,UAAU;AACpD,SAAQC,cAAc,EAAEC,WAAW,QAAO,SAAS;AAuDnD,OAAM,SAAUC,UAAUA,CAAC;EAACC,IAAI;EAAEC;AAAgB,CAA0C;EAC1F,IAAIA,gBAAgB,EAAE;IACpB,OAAOD,IAAI,CAACE,GAAG,IAAI,QAAQ;GAC5B,MAAM;IACL,OAAO,UAAU;;AAErB;AAEA,OAAM,SAAUC,MAAMA,CAACC,IAA4C;EACjE,OAAOX,QAAQ,CAACW,IAAI,CAAC,IAAIA,IAAI,CAAC,MAAM,CAAC,KAAKC,SAAS;AACrD;AAuCA,OAAM,SAAUC,aAAaA,CAACC,CAAM;EAClC,OAAOA,CAAC,CAAC,MAAM,CAAC,IAAIA,CAAC,CAAC,OAAO,CAAC,IAAIA,CAAC,CAAC,QAAQ,CAAC;AAC/C;AAqHA,OAAO,MAAMC,eAAe,GAAG,EAAE;AAuCjC,MAAMC,wBAAwB,GAAoD;EAChFC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,CAAC;EACTC,MAAM,EAAE,CAAC;EACTC,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE;CACV;AAED,MAAMC,6BAA6B,GAAGrB,IAAI,CAACe,wBAAwB,CAAC;AAIpE,OAAM,SAAUO,wBAAwBA,CACtCC,IAAoB,EACpBC,QAAuC,EACvCC,MAA+B;EAE/B,MAAMC,iBAAiB,GAAGD,MAAM,CAACD,QAAQ,CAAC;EAC1C,MAAMG,MAAM,GAAwC,EAAE;EAEtD;EACA,MAAM;IAACP,OAAO,EAAEQ,aAAa;IAAET;EAAO,CAAC,GAAGO,iBAAiB;EAC3D,IAAIE,aAAa,KAAKjB,SAAS,EAAE;IAC/BgB,MAAM,CAACP,OAAO,GAAGQ,aAAa;;EAGhC,IAAIT,OAAO,KAAKR,SAAS,EAAE;IACzB,IAAKP,WAAW,CAACmB,IAAI,CAAC,IAAI,CAACpB,cAAc,CAACoB,IAAI,CAACM,KAAK,CAAC,IAAK5B,YAAY,CAACsB,IAAI,CAAC,EAAE;MAC5EI,MAAM,CAACR,OAAO,GAAGA,OAAO;;;EAI5B,IAAIjB,aAAa,CAACqB,IAAI,CAAC,EAAE;IACvBI,MAAM,CAACR,OAAO,GAAG,CAAC;;EAGpB;EACA,KAAK,MAAMW,IAAI,IAAIT,6BAA6B,EAAE;IAChD,IAAIE,IAAI,CAACO,IAAI,CAAC,KAAKnB,SAAS,EAAE;MAC5B,IAAImB,IAAI,KAAK,SAAS,EAAE;QACtB,MAAMV,OAAO,GAA4BG,IAAI,CAACO,IAAI,CAAC;QAEnDH,MAAM,CAACG,IAAI,CAAC,GAAGhC,QAAQ,CAACsB,OAAO,CAAC,GAC5BA,OAAO,GACP;UACEW,GAAG,EAAEX,OAAO,CAACW,GAAG,IAAIH,aAAa;UACjCI,MAAM,EAAEZ,OAAO,CAACY,MAAM,IAAIJ;SAC3B;OACN,MAAM;QACJD,MAAM,CAACG,IAAI,CAAS,GAAGP,IAAI,CAACO,IAAI,CAAC;;;;EAKxC,OAAOH,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}