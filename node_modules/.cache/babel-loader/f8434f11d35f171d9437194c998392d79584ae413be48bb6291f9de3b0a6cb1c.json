{"ast":null,"code":"import { keys } from './util';\n/**\n * All types of primitive marks.\n */\nexport const Mark = {\n  arc: 'arc',\n  area: 'area',\n  bar: 'bar',\n  image: 'image',\n  line: 'line',\n  point: 'point',\n  rect: 'rect',\n  rule: 'rule',\n  text: 'text',\n  tick: 'tick',\n  trail: 'trail',\n  circle: 'circle',\n  square: 'square',\n  geoshape: 'geoshape'\n};\nexport const ARC = Mark.arc;\nexport const AREA = Mark.area;\nexport const BAR = Mark.bar;\nexport const IMAGE = Mark.image;\nexport const LINE = Mark.line;\nexport const POINT = Mark.point;\nexport const RECT = Mark.rect;\nexport const RULE = Mark.rule;\nexport const TEXT = Mark.text;\nexport const TICK = Mark.tick;\nexport const TRAIL = Mark.trail;\nexport const CIRCLE = Mark.circle;\nexport const SQUARE = Mark.square;\nexport const GEOSHAPE = Mark.geoshape;\nexport function isMark(m) {\n  return m in Mark;\n}\nexport function isPathMark(m) {\n  return ['line', 'area', 'trail'].includes(m);\n}\nexport function isRectBasedMark(m) {\n  return ['rect', 'bar', 'image', 'arc' /* arc is rect/interval in polar coordinate */].includes(m);\n}\nexport const PRIMITIVE_MARKS = new Set(keys(Mark));\nexport function isMarkDef(mark) {\n  return mark['type'];\n}\nexport function isPrimitiveMark(mark) {\n  const markType = isMarkDef(mark) ? mark.type : mark;\n  return PRIMITIVE_MARKS.has(markType);\n}\nexport const STROKE_CONFIG = ['stroke', 'strokeWidth', 'strokeDash', 'strokeDashOffset', 'strokeOpacity', 'strokeJoin', 'strokeMiterLimit'];\nexport const FILL_CONFIG = ['fill', 'fillOpacity'];\nexport const FILL_STROKE_CONFIG = [...STROKE_CONFIG, ...FILL_CONFIG];\nconst VL_ONLY_MARK_CONFIG_INDEX = {\n  color: 1,\n  filled: 1,\n  invalid: 1,\n  order: 1,\n  radius2: 1,\n  theta2: 1,\n  timeUnitBandSize: 1,\n  timeUnitBandPosition: 1\n};\nexport const VL_ONLY_MARK_CONFIG_PROPERTIES = keys(VL_ONLY_MARK_CONFIG_INDEX);\nexport const VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = {\n  area: ['line', 'point'],\n  bar: ['binSpacing', 'continuousBandSize', 'discreteBandSize', 'minBandSize'],\n  rect: ['binSpacing', 'continuousBandSize', 'discreteBandSize', 'minBandSize'],\n  line: ['point'],\n  tick: ['bandSize', 'thickness']\n};\nexport const defaultMarkConfig = {\n  color: '#4c78a8',\n  invalid: 'filter',\n  timeUnitBandSize: 1\n};\nconst MARK_CONFIG_INDEX = {\n  mark: 1,\n  arc: 1,\n  area: 1,\n  bar: 1,\n  circle: 1,\n  image: 1,\n  line: 1,\n  point: 1,\n  rect: 1,\n  rule: 1,\n  square: 1,\n  text: 1,\n  tick: 1,\n  trail: 1,\n  geoshape: 1\n};\nexport const MARK_CONFIGS = keys(MARK_CONFIG_INDEX);\nexport function isRelativeBandSize(o) {\n  return o && o['band'] != undefined;\n}\nexport const BAR_CORNER_RADIUS_INDEX = {\n  horizontal: ['cornerRadiusTopRight', 'cornerRadiusBottomRight'],\n  vertical: ['cornerRadiusTopLeft', 'cornerRadiusTopRight']\n};\nconst DEFAULT_RECT_BAND_SIZE = 5;\nexport const defaultBarConfig = {\n  binSpacing: 1,\n  continuousBandSize: DEFAULT_RECT_BAND_SIZE,\n  minBandSize: 0.25,\n  timeUnitBandPosition: 0.5\n};\nexport const defaultRectConfig = {\n  binSpacing: 0,\n  continuousBandSize: DEFAULT_RECT_BAND_SIZE,\n  minBandSize: 0.25,\n  timeUnitBandPosition: 0.5\n};\nexport const defaultTickConfig = {\n  thickness: 1\n};\nexport function getMarkType(m) {\n  return isMarkDef(m) ? m.type : m;\n}","map":{"version":3,"names":["keys","Mark","arc","area","bar","image","line","point","rect","rule","text","tick","trail","circle","square","geoshape","ARC","AREA","BAR","IMAGE","LINE","POINT","RECT","RULE","TEXT","TICK","TRAIL","CIRCLE","SQUARE","GEOSHAPE","isMark","m","isPathMark","includes","isRectBasedMark","PRIMITIVE_MARKS","Set","isMarkDef","mark","isPrimitiveMark","markType","type","has","STROKE_CONFIG","FILL_CONFIG","FILL_STROKE_CONFIG","VL_ONLY_MARK_CONFIG_INDEX","color","filled","invalid","order","radius2","theta2","timeUnitBandSize","timeUnitBandPosition","VL_ONLY_MARK_CONFIG_PROPERTIES","VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX","defaultMarkConfig","MARK_CONFIG_INDEX","MARK_CONFIGS","isRelativeBandSize","o","undefined","BAR_CORNER_RADIUS_INDEX","horizontal","vertical","DEFAULT_RECT_BAND_SIZE","defaultBarConfig","binSpacing","continuousBandSize","minBandSize","defaultRectConfig","defaultTickConfig","thickness","getMarkType"],"sources":["../../src/mark.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}