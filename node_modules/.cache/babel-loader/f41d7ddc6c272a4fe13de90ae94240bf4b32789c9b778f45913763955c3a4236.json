{"ast":null,"code":"export function isLogicalOr(op) {\n  return !!op.or;\n}\nexport function isLogicalAnd(op) {\n  return !!op.and;\n}\nexport function isLogicalNot(op) {\n  return !!op.not;\n}\nexport function forEachLeaf(op, fn) {\n  if (isLogicalNot(op)) {\n    forEachLeaf(op.not, fn);\n  } else if (isLogicalAnd(op)) {\n    for (const subop of op.and) {\n      forEachLeaf(subop, fn);\n    }\n  } else if (isLogicalOr(op)) {\n    for (const subop of op.or) {\n      forEachLeaf(subop, fn);\n    }\n  } else {\n    fn(op);\n  }\n}\nexport function normalizeLogicalComposition(op, normalizer) {\n  if (isLogicalNot(op)) {\n    return {\n      not: normalizeLogicalComposition(op.not, normalizer)\n    };\n  } else if (isLogicalAnd(op)) {\n    return {\n      and: op.and.map(o => normalizeLogicalComposition(o, normalizer))\n    };\n  } else if (isLogicalOr(op)) {\n    return {\n      or: op.or.map(o => normalizeLogicalComposition(o, normalizer))\n    };\n  } else {\n    return normalizer(op);\n  }\n}","map":{"version":3,"names":["isLogicalOr","op","or","isLogicalAnd","and","isLogicalNot","not","forEachLeaf","fn","subop","normalizeLogicalComposition","normalizer","map","o"],"sources":["../../src/logical.ts"],"sourcesContent":[null],"mappings":"AAcA,OAAM,SAAUA,WAAWA,CAACC,EAA2B;EACrD,OAAO,CAAC,CAACA,EAAE,CAACC,EAAE;AAChB;AAEA,OAAM,SAAUC,YAAYA,CAACF,EAA2B;EACtD,OAAO,CAAC,CAACA,EAAE,CAACG,GAAG;AACjB;AAEA,OAAM,SAAUC,YAAYA,CAACJ,EAA2B;EACtD,OAAO,CAAC,CAACA,EAAE,CAACK,GAAG;AACjB;AAEA,OAAM,SAAUC,WAAWA,CAAIN,EAAyB,EAAEO,EAAmB;EAC3E,IAAIH,YAAY,CAACJ,EAAE,CAAC,EAAE;IACpBM,WAAW,CAACN,EAAE,CAACK,GAAG,EAAEE,EAAE,CAAC;GACxB,MAAM,IAAIL,YAAY,CAACF,EAAE,CAAC,EAAE;IAC3B,KAAK,MAAMQ,KAAK,IAAIR,EAAE,CAACG,GAAG,EAAE;MAC1BG,WAAW,CAACE,KAAK,EAAED,EAAE,CAAC;;GAEzB,MAAM,IAAIR,WAAW,CAACC,EAAE,CAAC,EAAE;IAC1B,KAAK,MAAMQ,KAAK,IAAIR,EAAE,CAACC,EAAE,EAAE;MACzBK,WAAW,CAACE,KAAK,EAAED,EAAE,CAAC;;GAEzB,MAAM;IACLA,EAAE,CAACP,EAAE,CAAC;;AAEV;AAEA,OAAM,SAAUS,2BAA2BA,CACzCT,EAAyB,EACzBU,UAAuB;EAEvB,IAAIN,YAAY,CAACJ,EAAE,CAAC,EAAE;IACpB,OAAO;MAACK,GAAG,EAAEI,2BAA2B,CAACT,EAAE,CAACK,GAAG,EAAEK,UAAU;IAAC,CAAC;GAC9D,MAAM,IAAIR,YAAY,CAACF,EAAE,CAAC,EAAE;IAC3B,OAAO;MAACG,GAAG,EAAEH,EAAE,CAACG,GAAG,CAACQ,GAAG,CAACC,CAAC,IAAIH,2BAA2B,CAACG,CAAC,EAAEF,UAAU,CAAC;IAAC,CAAC;GAC1E,MAAM,IAAIX,WAAW,CAACC,EAAE,CAAC,EAAE;IAC1B,OAAO;MAACC,EAAE,EAAED,EAAE,CAACC,EAAE,CAACU,GAAG,CAACC,CAAC,IAAIH,2BAA2B,CAACG,CAAC,EAAEF,UAAU,CAAC;IAAC,CAAC;GACxE,MAAM;IACL,OAAOA,UAAU,CAACV,EAAE,CAAC;;AAEzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}